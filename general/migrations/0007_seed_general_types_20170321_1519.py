# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
from general.models import Space_Type, Address_Type, Region_Type, Being_Type, Project_Type, Company_Type, Nonmaterial_Type, Material_Type, Job, Record, Region, Relation, UnitRatio, Record_Type, Type, Artwork_Type, Unit_Type, Unit

# helper for performing checks & inserts

def ensureRows(model, keys, rows):
    for row in rows:
        fields = zip(keys, row)
        lookup = dict(zip((fields[0][0],), (fields[0][1],)))

        if (model.objects.filter(**lookup).count() > 0):
            print "%s record already exists, skipping" % model.__name__
        else:
            model.objects.create(**dict(fields))
            print "created new %s record (id %d)" % (model.__name__, row[0])

# data inserts

def insertSpace_Types(apps, schema_editor):
    keys = (
        "typ_id",
    )

    rows = (
        (7, ),
        (8, ),
        (39, ),
        (40, ),
        (41, ),
        (42, ),
        (43, ),
        (44, ),
        (45, ),
        (46, ),
        (62, ),
    )

    ensureRows(Space_Type, keys, rows)

def insertAddress_Types(apps, schema_editor):
    keys = (
        "space_type_id",
        "typ_id",
    )

    rows = (
        (44, ),
        (45, ),
        (46, ),
    )

    ensureRows(Address_Type, keys, rows)

def insertRegion_Types(apps, schema_editor):
    keys = (
        "space_type_id",
        "typ_id",
    )

    rows = (
        (39, ),
        (40, ),
        (41, ),
        (42, ),
        (43, ),
        (62, ),
    )

    ensureRows(Region_Type, keys, rows)

def insertBeing_Types(apps, schema_editor):
    keys = (
        "typ_id"
    )

    rows = (
        (4, ),
        (5, ),
        (6, ),
        (13, ),
        (19, ),
        (20, ),
        (21, ),
        (22, ),
        (23, ),
        (24, ),
        (25, ),
        (26, ),
        (27, ),
        (28, ),
        (29, ),
        (31, ),
        (32, ),
        (47, ),
        (63, ),
        (64, ),
        (66, ),
    )

    ensureRows(Being_Type, keys, rows)

def insertProject_Types(apps, schema_editor):
    keys = (
        "being_type_id",
        "typ_id",
    )

    rows = (
        (13, ),
        (21, ),
        (22, ),
        (23, ),
        (24, ),
        (25, ),
        (26, ),
        (27, ),
        (28, ),
        (29, ),
        (31, ),
        (32, ),
        (47, ),
        (63, ),
        (66, ),
    )

    ensureRows(Project_Type, keys, rows)

def insertCompany_Types(apps, schema_editor):
    keys = (
        "being_type_id",
        "typ_id",
    )

    rows = (
        (19, ),
        (20, ),
        (64, ),
    )

    ensureRows(Company_Type, keys, rows)

def insertNonmaterial_Types(apps, schema_editor):
    keys = (
        "artwork_type_id",
        "typ_id",
    )

    rows = (
        (49, ),
        (50, ),
        (51, ),
        (52, ),
        (53, ),
        (54, ),
        (65, ),
        (71, ),
        (73, ),
        (74, ),
        (75, ),
        (76, ),
        (77, ),
        (78, ),
        (79, ),
        (80, ),
        (81, ),
        (82, ),
        (83, ),
        (84, ),
        (85, ),
        (86, ),
        (87, ),
        (149, ),
        (150, ),
        (151, ),
        (154, ),
        (155, ),
        (156, ),
        (157, ),
        (173, ),
        (174, ),
        (175, ),
        (176, ),
        (177, ),
        (180, ),
    )

    ensureRows(Nonmaterial_Type, keys, rows)

def insertMaterial_Types(apps, schema_editor):
    keys = (
        "artwork_type_id",
        "typ_id",
    )

    rows = (
        (55, ),
        (56, ),
        (57, ),
        (88, ),
        (89, ),
        (90, ),
        (91, ),
        (92, ),
        (93, ),
        (94, ),
        (95, ),
        (96, ),
        (97, ),
        (98, ),
        (152, ),
        (153, ),
        (158, ),
        (159, ),
        (160, ),
        (161, ),
        (162, ),
        (163, ),
        (164, ),
        (165, ),
        (166, ),
        (167, ),
        (168, ),
        (169, ),
        (170, ),
        (179, ),
    )

    ensureRows(Material_Type, keys, rows)

def insertJobs(apps, schema_editor):
    keys = (
        "id",
        "name",
        "gerund",
        "description",
        "lft",
        "rght",
        "tree_id",
        "level",
        "clas",
        "parent_id",
        "verb",
    )

    rows = (
        (1,'Selfmanagement','selfmanaging','',9,14,7,2,'',27,'to selfmanage'),
        (2,'Coordination','coordinating','',10,11,7,3,'',1,'to coordinate'),
        (3,'Development','developing','',3,6,7,2,'',27,'to develop'),
        (4,'Transport','transporting','',46,49,7,1,'',25,'to transport'),
        (5,'IC Facilitation','facilitating IC','',12,13,7,3,'ic_facilitate',1,'to facilitate IC'),
        (6,'Restauration','restaurating','',18,21,7,3,'',8,'to restaurate'),
        (7,'Lifecare','lifecareing','',16,35,7,1,'',25,'to care life'),
        (8,'Alimentation','alimentating','',17,24,7,2,'',7,'to alimentate'),
        (9,'Clothing','making cloths','',25,26,7,2,'',7,'to make cloths'),
        (10,'Cleaning','cleaning','',30,31,7,3,'',12,'to clean'),
        (11,'Bodycare','bodycaring','',27,28,7,2,'',7,'to bodycare'),
        (12,'Shelter/Housing','sheltering/housing','',29,34,7,2,'',7,'to shelter/housing'),
        (13,'Building','building','',32,33,7,3,'',12,'to build'),
        (14,'Drive','driving','',47,48,7,2,'',4,'to drive'),
        (15,'Communication','communicating','',36,45,7,1,'',25,'to communicate'),
        (16,'Graphic Design','designing graphically','',37,38,7,2,'',15,'to design graphically'),
        (17,'Write','writing','',39,42,7,2,'',15,'to write'),
        (18,'Translate','translating','',40,41,7,3,'',17,'to translate'),
        (19,'Publish','publishing','',43,44,7,2,'',15,'to publish'),
        (20,'Grow Vegetables','growing vegetables','',22,23,7,3,'',8,'to grow vegetables'),
        (21,'Programming','programming','',4,5,7,3,'',3,'to program'),
        (22,'Cook','cooking','',19,20,7,4,'',6,'to cook'),
        (25,'Doing','doing','',1,50,7,0,'',None,'to do'),
        (26,'Not-doing','not doing','',1,4,8,0,'',None,'to not do'),
        (27,'Making','making','',2,15,7,1,'',25,'to make'),
        (28,'Listening','listening','',2,3,8,1,'',26,'to listen'),
        (29,'Transform','transforming','',7,8,7,2,'',27,'to transform'),
    )

    ensureRows(Job, keys, rows)

def insertRecords(apps, schema_editor):
    keys = (
        "id",
        "name",
        "description",
        "record_type_id",
    )

    rows = (
        (3,'EcoCoop * 10 = Hour','',58),
        (4,'EcoCoop * 1.000 = Euro','',59),
        (5,'Riu * 1.000 = Euro','',59),
        (6,'Hour * 24 = Day','',61),
        (7,'Day * 28 = Moon cycle','',61),
        (8,'Moon cycle * 13 = Year','',61),
        (9,'FairCoin * 20 = SocialCurrency','',59),
        (10,'Meter * 1000 = Kilometer','',69),
        (11,'Gram * 1000 = Kilogram','',70),
    )

    ensureRows(Record, keys, rows)

def insertRegions(apps, schema_editor):
    keys = (
        "id",
        "name",
        "description",
        "lft",
        "rght",
        "tree_id",
        "level",
        "parent_id",
        "region_type_id",
    )

    rows = (
        (1,'Catalan Countries','',2,9,2,1,5,41),
        (2,'Catalunya','',3,8,2,2,1,43),
        (3,'Barcelon√®s','',4,5,2,3,2,43),
        (4,'Anoia','',6,7,2,3,2,43),
        (5,'european continent','',1,10,2,0,None,39),
        (6,'planet Earth','',1,2,3,0,None,62),
    )

    ensureRows(Region, keys, rows)

def insertRelations(apps, schema_editor):
    keys = (
        "id",
        "name",
        "gerund",
        "description",
        "lft",
        "rght",
        "tree_id",
        "level",
        "clas",
        "parent_id",
        "verb",
    )

    rows = (
        (1,':Relation Human - Human','','',1,38,1,0,'rel_hum_hum',None,''),
        (2,':Relation Human - Art','','',1,6,2,0,'rel_hum_art',None,''),
        (3,':Relation Human - Space','','',1,20,3,0,'rel_hum_spac',None,''),
        (4,':Relation Human - Artwork','','',1,16,4,0,'',None,''),
        (5,':relation Person - Project','','',18,29,1,1,'rel_pers_proj',1,''),
        (6,':relation Person - Person','','',36,37,1,1,'rel_pers_pers',1,''),
        (7,'participation','participating','',7,8,1,2,'',19,'to participate'),
        (8,'help','helping','',5,6,1,2,'',19,'to help'),
        (9,'collaboration','collaborating','',15,16,1,2,'',21,'to collaborate'),
        (10,'contribution/collaboration','contributing/collaborating','',21,28,1,2,'contribute',5,'to contribute/collaborate'),
        (11,'coordination','coordinating','',3,4,1,2,'reference',19,'to coordinate'),
        (12,'contribution in a commission','contributing in a commission','',22,23,1,3,'',10,'to contribute in a commission'),
        (13,'sporadic contribution in tasks','contributing occasionally','',24,25,1,3,'',10,'to contribute occasionally'),
        (14,'economic contribution','contributing economically','',26,27,1,3,'',10,'to contribute economically'),
        (15,':relation Project - Address','','',2,9,3,1,'rel_proj_addr',3,''),
        (16,'offer of space','offering the space','',4,5,3,3,'',17,'to offer the space'),
        (17,'management of space','managing the space','',3,6,3,2,'',15,'to manage the space'),
        (18,':relation Project - Company','','',10,13,1,1,'rel_proj_empr',1,''),
        (19,':relation Project - Person','','',2,9,1,1,'rel_proj_pers',1,''),
        (20,'usage','using','',11,12,1,2,'',18,'to use'),
        (21,':relation Project - Project','','',14,17,1,1,'rel_proj_proj',1,''),
        (22,':relation Person - Company','','',30,35,1,1,'rel_pers_comp',1,''),
        (23,'use a space','using the space','',7,8,3,2,'',15,'to use the space'),
        (24,':relation Person - Address','','',10,15,3,1,'rel_pers_addr',3,''),
        (25,'habitation','habitating in','',11,12,3,2,'',24,'to habitate in'),
        (26,'work in','working in','',13,14,3,2,'',24,'to work in'),
        (27,'follow','following','',19,20,1,2,'',5,'to follow'),
        (28,'learning','learning','',2,3,2,1,'',2,'to learn'),
        (29,'practication','practicating','',4,5,2,1,'',2,'to practicate'),
        (30,':relation Human - Record','','',2,5,4,1,'rel_hum_reco',4,''),
        (31,'buy to a company','buying to a company','',31,32,1,2,'',22,'to buy to a company'),
        (32,'work for a company','working for a company','',33,34,1,2,'',22,'to work for a company'),
        (33,':relation Human - Region','','',16,19,3,1,'rel_hum_regi',3,''),
        (34,'living in','living in','',17,18,3,2,'',33,'to live in'),
        (35,':relation Human - Material artwork','','',6,9,4,1,'rel_hum_mate',4,''),
        (36,'ownership of record','owning the record','',3,4,4,2,'holder',30,'to own the record'),
        (37,'pertenence','pertaining','',7,8,4,2,'',35,'to pertain'),
        (38,':relation Human - Nonmaterial artwork','','',10,15,4,1,'rel_hum_nonm',4,''),
        (39,'representation','representing','',11,12,4,2,'',38,'to represent'),
        (40,'offer of non-material','offering a non-material','',13,14,4,2,'',38,'to offer a non-material'),
        (41,':relation Material artwork - Address','','',2,5,9,1,'rel_mat_addr',46,''),
        (42,'parking in','parking in','',3,4,9,2,'',41,'to park in'),
        (43,':relation Material artwork - Record','','',2,3,10,1,'rel_mat_reco',47,''),
        (44,':relation Material artwork - Non-material artwork','','',6,7,10,1,'rel_mat_nonm',47,''),
        (45,':relation Material artwork - Material artwork','','',4,5,10,1,'rel_mat_mate',47,''),
        (46,':Relation Artwork - Space','','',1,8,9,0,'',None,''),
        (47,':Relation Artwork - Artwork','','',1,12,10,0,'',None,''),
        (48,':Relation Artwork - Art','','',1,8,11,0,'',None,''),
        (49,':relation Material artwork - Job','','',2,5,11,1,'rel_mat_jobs',48,''),
        (50,':relation Non-material artwork - Address','','',6,7,9,1,'rel_non_addr',46,''),
        (51,':relation Non-material artwork - Record','','',8,9,10,1,'rel_non_reco',47,''),
        (52,':relation Non-material artwork - Job','','',6,7,11,1,'rel_non_jobs',48,''),
        (53,':relation Non-material artwork - Non-material artwork','','',10,11,10,1,'rel_non_nonm',47,''),
        (54,'service for','serving for','',3,4,11,2,'',49,'to service for'),
    )

    ensureRows(Relation, keys, rows)

def insertUnitRatios(apps, schema_editor):
    keys = (
        "record_id",
        "in_unit_id",
        "out_unit_id",
        "rate",
    )

    rows = (
        (3,1,5,10),
        (4,1,2,1),
        (5,6,2,1),
        (6,5,8,24),
        (7,8,9,28),
        (8,9,10,13),
        (9,7,11,20),
        (10,12,13,1000),
        (11,15,14,1000),
    )

    ensureRows(UnitRatio, keys, rows)

def insertRecord_Types(apps, schema_editor):
    keys = (
        "artwork_type_id",
    )

    rows = (
        (14, ),
        (15, ),
        (16, ),
        (17, ),
        (18, ),
        (58, ),
        (59, ),
        (60, ),
        (61, ),
        (69, ),
        (70, ),
        (124, ),
        (125, ),
        (126, ),
        (127, ),
        (128, ),
        (129, ),
        (130, ),
        (131, ),
        (132, ),
        (133, ),
        (134, ),
        (135, ),
        (136, ),
        (137, ),
        (138, ),
        (139, ),
        (140, ),
        (141, ),
        (142, ),
        (143, ),
        (144, ),
        (145, ),
        (146, ),
        (147, ),
        (148, ),
        (181, ),
        (182, ),
        (183, ),
        (184, ),
        (185, ),
        (186, ),
        (187, ),
        (214, ),
        (215, ),
        (217, ),
        (218, ),
        (219, ),
        (220, ),
        (221, ),
        (222, ),
        (223, ),
        (224, ),
        (225, ),
        (226, ),
        (227, ),
        (228, ),
        (229, ),
        (230, ),
        (231, ),
        (251, ),
        (252, ),
        (253, ),
        (254, ),
        (256, ),
        (257, ),
        (258, ),
        (259, ),
        (260, ),
        (263, ),
        (266, ),
        (267, ),
        (269, ),
        (270, ),
        (274, ),
        (275, ),
        (276, ),
        (277, ),
    )

    ensureRows(Record_Type, keys, rows)

def insertTypes(apps, schema_editor):
    keys = (
        "id",
        "description",
        "lft",
        "rght",
        "tree_id",
        "level",
        "clas",
        "parent_id",
        "name",
    )

    rows = (
        (1,'',1,44,1,0,'Being',None,'Being'),
        (2,'',1,24,2,0,'Space',None,'Space'),
        (3,'',1,368,3,0,'Artwork',None,'Artwork'),
        (4,'',2,3,1,1,'Person',1,'Person'),
        (5,'',4,35,1,1,'Project',1,'Project'),
        (6,'',36,43,1,1,'Company',1,'Company'),
        (7,'',2,9,2,1,'Address',2,'Address'),
        (8,'',10,23,2,1,'Region',2,'Region'),
        (9,'',2,71,3,1,'Material',3,'Material'),
        (10,'',72,147,3,1,'Nonmaterial',3,'Non-material'),
        (11,'',148,313,3,1,'Record',3,'Record'),
        (12,'',314,367,3,1,'Unit',3,'Unit'),
        (13,'',5,32,1,2,'ic_project',5,'IC Project'),
        (14,'',149,162,3,2,'UnitRatio',11,'Unit Ratio'),
        (15,'',163,170,3,2,'',11,'currency Account'),
        (16,'',164,165,3,3,'AccountCes',15,'CES account'),
        (17,'',166,167,3,3,'AccountCrypto',15,'Crypto account'),
        (18,'',168,169,3,3,'AccountBank',15,'Bank account'),
        (19,'',37,38,1,2,'cooperative',6,'Cooperative'),
        (20,'',39,40,1,2,'bank',6,'Bank'),
        (21,'',7,8,1,4,'',23,'Local Selfmanaged Group'),
        (22,'',9,10,1,4,'ces',23,'Regional Network ("Ecoxarxa")'),
        (23,'',6,19,1,3,'public',13,'Public'),
        (24,'',11,12,1,4,'ces',23,'Integral Cooperative'),
        (25,'',13,14,1,4,'',23,'Productive Public'),
        (26,'',15,16,1,4,'',23,'Common Service'),
        (27,'',27,28,1,4,'',63,'Cooperating Collective'),
        (28,'',29,30,1,4,'',63,'Consumer Group'),
        (29,'',20,21,1,3,'',13,'Services project'),
        (31,'',22,25,1,3,'selfemployed',13,'Selfemployed'),
        (32,'',23,24,1,4,'',31,'Selfemployed stallholder'),
        (34,'',339,352,3,2,'currency',12,'Currency'),
        (35,'',340,343,3,3,'social_currency',34,'Social Currency'),
        (36,'',344,347,3,3,'crypto_currency',34,'Crypto Currency'),
        (37,'',348,351,3,3,'fiat_currency',34,'Fiat Currency'),
        (38,'',353,358,3,2,'area',12,'Area'),
        (39,'',11,20,2,2,'',8,'Continent'),
        (40,'',12,13,2,3,'',39,'Country'),
        (41,'',14,19,2,3,'',39,'Cultural Community'),
        (42,'',15,16,2,4,'',41,'Bioregion'),
        (43,'',17,18,2,4,'region',41,'County'),
        (44,'',3,4,2,2,'',7,'Collective Polyvalent Space'),
        (45,'',5,6,2,2,'',7,'Workspace'),
        (46,'',7,8,2,2,'',7,'Housing'),
        (47,'',33,34,1,2,'',5,'Worldwide Network'),
        (48,'',317,326,3,2,'time_currency',12,'Time'),
        (49,'',99,108,3,4,'',84,'live Formation'),
        (50,'',73,110,3,2,'',10,'Cultural artwork'),
        (51,'',111,132,3,2,'',10,'Digital artwork'),
        (52,'',100,105,3,5,'',49,'IC formation'),
        (53,'',101,102,3,6,'',52,'session of Collective formation'),
        (54,'',103,104,3,6,'',52,'session of Individual formation'),
        (55,'',18,27,3,3,'',89,'Machine'),
        (56,'',19,22,3,4,'',55,'Vehicle'),
        (57,'',20,21,3,5,'',56,'Car'),
        (58,'',150,151,3,3,'',14,'ratio Currency - Time'),
        (59,'',152,153,3,3,'',14,'ratio Currency - Currency'),
        (60,'',154,155,3,3,'',14,'ratio Area - Area'),
        (61,'',156,157,3,3,'',14,'ratio Time - Time'),
        (62,'',21,22,2,2,'',8,'Planet'),
        (63,'',26,31,1,3,'online',13,'Online'),
        (64,'',41,42,1,2,'',6,'Insurance company'),
        (65,'',85,92,3,4,'',149,'Image'),
        (66,'',17,18,1,4,'ic_larder',23,'Larder'),
        (67,'',327,332,3,2,'weight',12,'Weight'),
        (68,'',333,338,3,2,'length',12,'Length'),
        (69,'',158,159,3,3,'',14,'ratio Length - Length'),
        (70,'',160,161,3,3,'',14,'ratio Weight - Weight'),
        (71,'',74,83,3,3,'',50,'Text'),
        (73,'',75,76,3,4,'',71,'Poem'),
        (74,'',77,78,3,4,'',71,'Article'),
        (75,'',112,119,3,3,'',51,'Website'),
        (76,'',115,116,3,4,'',75,'Database'),
        (77,'',86,87,3,5,'',65,'Photo'),
        (78,'',88,89,3,5,'',65,'Illustration'),
        (79,'',90,91,3,5,'',65,'Graphic/Diagram'),
        (80,'',117,118,3,4,'',75,'Hosting Plan'),
        (81,'',113,114,3,4,'',75,'Plugin'),
        (82,'',95,96,3,4,'',84,'live Music'),
        (83,'',97,98,3,4,'',84,'Performance'),
        (84,'',94,109,3,3,'',50,'Live Event'),
        (85,'',120,125,3,3,'',51,'digital Music'),
        (86,'',121,122,3,4,'',85,'Song/Track'),
        (87,'',123,124,3,4,'',85,'Album'),
        (88,'',3,16,3,2,'',9,'Raw Material'),
        (89,'',17,30,3,2,'',9,'Tool'),
        (90,'',28,29,3,3,'',89,'Manual Tool'),
        (91,'',4,7,3,3,'',88,'raw Vegetal'),
        (92,'',8,9,3,3,'',88,'raw Mineral'),
        (93,'',10,11,3,3,'',88,'raw Animal'),
        (94,'',23,24,3,4,'',55,'Motor Hand Tool'),
        (95,'',36,43,3,3,'',160,'Food'),
        (96,'',37,40,3,4,'',95,'Artisan Vegetal derivate'),
        (97,'',44,45,3,3,'',160,'Drinks'),
        (98,'',41,42,3,4,'',95,'Artisan Animal derivate'),
        (124,'',171,312,3,2,'ocp_record',11,'OCP Record'),
        (125,'',172,311,3,3,'ocp_exchange',124,'OCP ExchangeType'),
        (126,'',173,208,3,4,'gift_economy',125,'Gift Economy:'),
        (127,'',209,224,3,4,'swap_economy',125,'Swap Economy:'),
        (128,'Mutual-credit currency operation',295,302,3,4,'social_economy',125,'Social Currency economy:'),
        (129,'Donate or present as a gift',174,189,3,5,'give',126,'Give gift:'),
        (130,'',190,207,3,5,'receive',126,'Receive gift:'),
        (131,'',175,180,3,6,'',129,'give Material resources'),
        (132,'',181,184,3,6,'',129,'give Non-material resources'),
        (133,'',185,188,3,6,'',129,'give Service time'),
        (134,'',191,196,3,6,'',130,'receive Material resources'),
        (135,'',197,200,3,6,'',130,'receive Non-material resources'),
        (136,'',201,206,3,6,'',130,'receive Service time'),
        (137,'',211,212,3,6,'',185,'swap Material for Material'),
        (138,'',213,214,3,6,'',185,'swap Material for Non-material'),
        (139,'',215,216,3,6,'',185,'swap Non-material for Material'),
        (140,'',217,218,3,6,'',185,'swap Non-material for Non-material'),
        (141,'',296,297,3,5,'sell',128,'social Sell:'),
        (142,'',298,299,3,5,'buy',128,'social Buy:'),
        (143,'',235,242,3,6,'',224,'fair-Sell Material resources'),
        (144,'',243,248,3,6,'',224,'fair-Sell Non-material resources'),
        (145,'',249,250,3,6,'',224,'fair sell Service-time'),
        (146,'',253,254,3,6,'',225,'fair-Buy Material resources'),
        (147,'',255,260,3,6,'',225,'fair-Buy Non-material resources'),
        (148,'',261,262,3,6,'',225,'fair buy Service time'),
        (149,'',84,93,3,3,'',50,'Visual'),
        (150,'',133,140,3,2,'',10,'Service'),
        (151,'',126,127,3,3,'',51,'digital File'),
        (152,'',5,6,3,4,'',91,'Fruit'),
        (153,'',25,26,3,4,'',55,'Laptop'),
        (155,'',141,146,3,2,'currency',10,'digital Currencies'),
        (156,'',142,143,3,3,'',155,'FairCoin'),
        (157,'',144,145,3,3,'',155,'Euro digital'),
        (158,'',31,34,3,2,'currency',9,'physical Currencies'),
        (159,'',32,33,3,3,'',158,'Euro cash'),
        (160,'',35,52,3,2,'',9,'Aliments'),
        (161,'',53,70,3,2,'',9,'Spaces'),
        (162,'',54,55,3,3,'',161,'Co-working space'),
        (163,'',56,57,3,3,'',161,'Eating space'),
        (164,'',58,59,3,3,'',161,'FabLab'),
        (165,'',38,39,3,5,'',96,'Jam'),
        (166,'',60,67,3,3,'',161,'Living space'),
        (167,'',46,47,3,3,'',160,'Meal'),
        (168,'',49,50,3,4,'',169,'Sweets'),
        (169,'',48,51,3,3,'',160,'Industrial pseudo-food'),
        (170,'',12,15,3,3,'',88,'Recycled materials'),
        (173,'',134,135,3,3,'',150,'Cleaning'),
        (174,'',136,137,3,3,'',150,'Cooking'),
        (175,'',106,107,3,5,'',49,'Course'),
        (176,'',138,139,3,3,'',150,'Programming'),
        (177,'',79,80,3,4,'',71,'Document'),
        (179,'',68,69,3,3,'',161,'Meeting room'),
        (180,'',81,82,3,4,'',71,'Translation'),
        (181,'',300,301,3,5,'rent',128,'social Rent:'),
        (182,'',289,292,3,6,'',220,'fiat-rent-Charge resources'),
        (183,'',285,288,3,6,'',220,'fiat-rent-Pay resources'),
        (184,'',290,291,3,7,'',182,'fiat-charge Space rental'),
        (185,'',210,219,3,5,'',127,'swap Resource for Resource'),
        (186,'',220,221,3,5,'',127,'swap Resource for Service Time'),
        (187,'',222,223,3,5,'',127,'swap Service Time for Service Time'),
        (214,'',227,232,3,4,'currency_exchange',125,'Currency Exchanges:'),
        (215,'',228,229,3,5,'',214,'exchange FiatCurrency for FairCoin'),
        (217,'',275,294,3,4,'fiat_economy',125,'Fiat-currency Economy:'),
        (218,'',276,277,3,5,'sell',217,'fiat Sell'),
        (219,'',278,283,3,5,'buy',217,'fiat Buy'),
        (220,'',284,293,3,5,'rent',217,'fiat Rent'),
        (221,'',225,226,3,4,'money_economy',125,'Monetary Economy:'),
        (222,'',233,274,3,4,'fair_economy',125,'Faircoin Economy:'),
        (223,'',303,310,3,4,'crypto_economy',125,'Cryptocoins economy'),
        (224,'',234,251,3,5,'sell',222,'fair Sell'),
        (225,'',252,263,3,5,'buy',222,'fair Buy'),
        (226,'',264,273,3,5,'rent',222,'fair Rent'),
        (227,'',304,305,3,5,'sell',223,'crypto Sell'),
        (228,'',306,307,3,5,'buy',223,'crypto Buy'),
        (229,'',308,309,3,5,'rent',223,'crypto Rent'),
        (230,'',230,231,3,5,'',214,'exchange SocialCurrency for FairCoin'),
        (231,'',286,287,3,7,'',183,'fiat-rent-pay Space'),
        (232,'',359,362,3,2,'volume',12,'Volume'),
        (233,'',318,319,3,3,'',48,'Hours'),
        (234,'',320,321,3,3,'',48,'Days'),
        (235,'',322,323,3,3,'',48,'Moons'),
        (236,'',363,364,3,2,'each',12,'Each'),
        (237,'',345,346,3,4,'faircoin',36,'Faircoins'),
        (238,'',328,329,3,3,'',67,'Kilos'),
        (240,'',365,366,3,2,'',12,'Percent'),
        (241,'',341,342,3,4,'',35,'EcoCoops'),
        (242,'',354,355,3,3,'',38,'Square meters'),
        (243,'',356,357,3,3,'',38,'Hectares'),
        (244,'',360,361,3,3,'',232,'Liters'),
        (245,'',330,331,3,3,'',67,'Grams'),
        (246,'',324,325,3,3,'',48,'Years'),
        (247,'',334,335,3,3,'',68,'Meters'),
        (248,'',336,337,3,3,'',68,'Kilometers'),
        (249,'',349,350,3,4,'euro',37,'Euros'),
        (250,'',128,129,3,3,'',51,'Software'),
        (251,'',182,183,3,7,'',132,'give FairCoin donation'),
        (252,'',265,268,3,6,'',226,'fair-rent-Pay any resources'),
        (253,'',269,272,3,6,'',226,'fair-rent-Charge any resources'),
        (254,'',198,199,3,7,'faircoin',135,'receive Faircoin donation'),
        (256,'',202,205,3,7,'',136,'receive Translating'),
        (257,'',176,177,3,7,'',131,'give Aliments'),
        (258,'',186,187,3,7,'',133,'give Communicating'),
        (259,'',194,195,3,7,'',134,'receive Tool'),
        (260,'',178,179,3,7,'',131,'give Tool'),
        (261,'Room rent covers just the base costs of the house, no meals, but does include tea and coffee.',61,62,3,4,'',166,'Daily room rent'),
        (262,'',63,64,3,4,'',166,'Monthly Living space'),
        (263,'',270,271,3,7,'',253,'fair-rent-charge Monthly Living space'),
        (264,'',13,14,3,4,'',170,'recicle Plastics'),
        (265,'Gives you 250 days per year.',65,66,3,4,'',166,'Yearly Living space <'),
        (266,'',279,280,3,6,'',219,'fiat-buy Material resources'),
        (267,'',281,282,3,6,'',219,'fiat-buy Non-material resources'),
        (269,'',236,237,3,7,'',143,'fair-sell Tool'),
        (270,'',244,245,3,7,'',144,'fair-sell Album'),
        (271,'',130,131,3,3,'',51,'Internet connection'),
        (274,'',238,239,3,7,'',143,'fair-sell Fruit'),
        (275,'',256,257,3,7,'',147,'fair-buy Website'),
        (276,'',258,259,3,7,'',147,'fair-buy Internet connection'),
        (277,'',240,241,3,7,'',143,'fair-Sell Spaces'),
    )

    ensureRows(Type, keys, rows)

def insertArtwork_Types(apps, schema_editor):
    keys = (
        "typ_id",
    )

    rows = (
        (9, ),
        (10, ),
        (11, ),
        (12, ),
        (14, ),
        (15, ),
        (16, ),
        (17, ),
        (18, ),
        (34, ),
        (35, ),
        (36, ),
        (37, ),
        (38, ),
        (48, ),
        (49, ),
        (50, ),
        (51, ),
        (52, ),
        (53, ),
        (54, ),
        (55, ),
        (56, ),
        (57, ),
        (58, ),
        (59, ),
        (60, ),
        (61, ),
        (65, ),
        (67, ),
        (68, ),
        (69, ),
        (70, ),
        (71, ),
        (73, ),
        (74, ),
        (75, ),
        (76, ),
        (77, ),
        (78, ),
        (79, ),
        (80, ),
        (81, ),
        (82, ),
        (83, ),
        (84, ),
        (85, ),
        (86, ),
        (87, ),
        (88, ),
        (89, ),
        (90, ),
        (91, ),
        (92, ),
        (93, ),
        (94, ),
        (95, ),
        (96, ),
        (97, ),
        (98, ),
        (124, ),
        (125, ),
        (126, ),
        (127, ),
        (128, ),
        (129, ),
        (130, ),
        (131, ),
        (132, ),
        (133, ),
        (134, ),
        (135, ),
        (136, ),
        (137, ),
        (138, ),
        (139, ),
        (140, ),
        (141, ),
        (142, ),
        (143, ),
        (144, ),
        (145, ),
        (146, ),
        (147, ),
        (148, ),
        (149, ),
        (150, ),
        (151, ),
        (152, ),
        (153, ),
        (155, ),
        (156, ),
        (157, ),
        (158, ),
        (159, ),
        (160, ),
        (161, ),
        (162, ),
        (163, ),
        (164, ),
        (165, ),
        (166, ),
        (167, ),
        (168, ),
        (169, ),
        (170, ),
        (173, ),
        (174, ),
        (175, ),
        (176, ),
        (177, ),
        (179, ),
        (180, ),
        (181, ),
        (182, ),
        (183, ),
        (184, ),
        (185, ),
        (186, ),
        (187, ),
        (214, ),
        (215, ),
        (217, ),
        (218, ),
        (219, ),
        (220, ),
        (221, ),
        (222, ),
        (223, ),
        (224, ),
        (225, ),
        (226, ),
        (227, ),
        (228, ),
        (229, ),
        (230, ),
        (231, ),
        (232, ),
        (233, ),
        (234, ),
        (235, ),
        (236, ),
        (237, ),
        (238, ),
        (240, ),
        (241, ),
        (242, ),
        (243, ),
        (244, ),
        (245, ),
        (246, ),
        (247, ),
        (248, ),
        (249, ),
        (250, ),
        (251, ),
        (252, ),
        (253, ),
        (254, ),
        (256, ),
        (257, ),
        (258, ),
        (259, ),
        (260, ),
        (261, ),
        (262, ),
        (263, ),
        (264, ),
        (265, ),
        (266, ),
        (267, ),
        (269, ),
        (270, ),
        (271, ),
        (274, ),
        (275, ),
        (276, ),
        (277, ),
    )

    ensureRows(Artwork_Type, keys, rows)

def insertUnit_Types(apps, schema_editor):
    keys = (
        "artwork_type_id",
    )

    rows = (
        (34, ),
        (35, ),
        (36, ),
        (37, ),
        (38, ),
        (48, ),
        (67, ),
        (68, ),
        (232, ),
        (233, ),
        (234, ),
        (235, ),
        (236, ),
        (237, ),
        (238, ),
        (240, ),
        (241, ),
        (242, ),
        (243, ),
        (244, ),
        (245, ),
        (246, ),
        (247, ),
        (248, ),
        (249, ),
    )

    ensureRows(Unit_Type, keys, rows)

def insertUnits(apps, schema_editor):
    keys = (
        "id",
        "name",
        "description",
        "code",
        "region_id",
        "unit_type_id",
    )

    rows = (
        (1,'EcoCoop','','eco',None,35),
        (2,'Euro','','‚Ç¨',None,37),
        (3,'Square Meter','','m2',None,38),
        (4,'Hectare','','Ha',None,38),
        (5,'Hour','','h',None,48),
        (6,'Riu','','riu',4,35),
        (7,'FairCoin','','∆í',6,36),
        (8,'Day','','dd',None,48),
        (9,'Moon cycle','','moon',None,48),
        (10,'Year','','yy',None,48),
        (11,'SocialCurrency','','SCUR',None,35),
        (12,'Meter','','m',None,68),
        (13,'Kilometer','','Km',None,68),
        (14,'Kilogram','','Kg',None,67),
        (15,'Gram','','gr',None,67),
    )

    ensureRows(Unit, keys, rows)


# Migration interface

class Migration(migrations.Migration):

    dependencies = [
        ('general', '0006_auto_20170319_1956'),
    ]

    operations = [
        migrations.RunPython(insertTypes),
        migrations.RunPython(insertSpace_Types),
        migrations.RunPython(insertAddress_Types),
        migrations.RunPython(insertRegion_Types),
        migrations.RunPython(insertBeing_Types),
        migrations.RunPython(insertProject_Types),
        migrations.RunPython(insertCompany_Types),
        migrations.RunPython(insertNonmaterial_Types),
        migrations.RunPython(insertMaterial_Types),
        migrations.RunPython(insertRecord_Types),
        migrations.RunPython(insertArtwork_Types),
        migrations.RunPython(insertUnit_Types),
        migrations.RunPython(insertJobs),
        migrations.RunPython(insertRecords),
        migrations.RunPython(insertRegions),
        migrations.RunPython(insertRelations),
        migrations.RunPython(insertUnitRatios),
        migrations.RunPython(insertUnits),
    ]
